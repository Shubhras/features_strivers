# # Drupal with PostgreSQL
# #
# # Access via "http://localhost:8080"
# #   (or "http://$(docker-machine ip):8080" if using docker-machine)
# #
# # During initial Drupal setup,
# # Database type: PostgreSQL
# # Database name: postgres
# # Database username: postgres
# # Database password: example
# # ADVANCED OPTIONS; Database host: postgres

# version: '3.1'


# services:

#   php:
#     # image: drupal:7-apache
#     build:
#       context: .
#       dockerfile: ./Dockerfile
#     ports:
#       - 8082:80
#       - 8443:443
#     volumes:
#       - "./:/var/www/html"
#       - ./ioncube/ioncube_loader_lin_7.4.so:/usr/local/lib/php/extensions/no-debug-non-zts-20190902/ioncube_loader_lin_7.4.so
#       - ./ioncube/local.ini:/usr/local/etc/php/conf.d/00-ioncube.ini
#       - ./ioncube/info.php:/var/www/html/info.php
#       # - /var/www/html/modules
#       # - /var/www/html/profiles
#       # - /var/www/html/themes
#       # this takes advantage of the feature in Docker that a new anonymous
#       # volume (which is what we're creating here) will be initialized with the
#       # existing content of the image at the same location
#       # - /var/www/html/sites
#     restart: always
  
#   adminer:
#     image: adminer
#     restart: always
#     ports:
#       - 8080:8080

#   db:
#     image: mysql:latest
#     restart: always
#     environment:
#       MYSQL_DATABASE: script
#       MYSQL_USER: ankit
#       MYSQL_PASSWORD: ankit123
#       MYSQL_ROOT_PASSWORD: ankit123


version: '3.1'

networks:
  laravel:

services:
  strive_web_app:
    build:
      context: .
      dockerfile: Dockerfile
    image: features_strivers
    ports:
      - "9000:8000"
    depends_on:
      - strive_db
    volumes:
      - .:/var/www/html
    networks:
      - laravel

  strive_adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - strive_db
    networks:
      - laravel

  strive_db:
    image: mysql:latest
    restart: always
    volumes:
    - ./data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
      MYSQL_DATABASE: star
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    networks:
      - laravel

volumes:
  adminer-data: 